<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pbImage.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>